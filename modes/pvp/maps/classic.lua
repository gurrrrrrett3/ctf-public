---@type MapBuilder
local map = require("modes.pvp.modules.maps.mapBuilder").create()
local MapPrefabs = require("modes.pvp.modules.maps.mapPrefabs")

map
	:setName("classic")
	:setDescription("test map")
	:setAuthor("dingus")
	:setMapBounds(Vector(951.73, 167.25, 1304.51), Vector(1504.74, 23.25, 978.40))
	-- wall by blue flag
	:addItem(enum.item.wall, Vector(1502, 25, 1118), orientations.e, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1502, 25, 1121), orientations.e, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1502, 25, 1124), orientations.e, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1502, 25, 1127), orientations.e, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1502, 25, 1130), orientations.e, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1502, 25, 1133), orientations.e, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1502, 25, 1136), orientations.e, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1502, 25, 1139), orientations.e, MapPrefabs.Obstacle)
	-- wall near dire dhow
	:addItem(enum.item.wall, Vector(1498, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1495, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1492, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1489, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1486, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1483, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1480, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1477, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1474, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1471, 37, 1294), orientations.n, MapPrefabs.Obstacle)
	-- wall near red spawn
	:addItem(enum.item.wall, Vector(1187, 25, 1246), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1184, 25, 1246), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1181, 25, 1246), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1178, 25, 1246), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1175, 25, 1246), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1172, 25, 1246), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1169, 25, 1246), orientations.n, MapPrefabs.Obstacle)
	:addItem(enum.item.wall, Vector(1166, 25, 1246), orientations.n, MapPrefabs.Obstacle)
	-- red team
	:addTeam()
	:setFlagLocation(Vector(1024, 24, 1128))
	:setSpawnRegion(Vector(1008, 25, 1220), Vector(1012, 25, 1244), orientations.e)
	:setCaptureRegion(Vector(1006, 24.06, 1218), Vector(980, 45, 1244))
	:setTeamOnlyRegion(Vector(980, 24, 1200), Vector(1040, 50, 1250))
	:addVehicle(enum.vehicle.beamer, Vector(1015, 26, 1240), orientations.e)
	:addVehicle(enum.vehicle.van, Vector(1015, 26, 1235), orientations.e)
	:addVehicle(enum.vehicle.town_car, Vector(1015, 26, 1230), orientations.e)
	:addVehicle(enum.vehicle.hatchback, Vector(1015, 26, 1225), orientations.e)
	-- blue team
	:nextTeam()
	:setFlagLocation(Vector(1484, 24, 1128))
	:setSpawnRegion(Vector(1500, 25, 1036), Vector(1504, 25, 1010), orientations.w)
	:setCaptureRegion(Vector(1504, 24, 1036), Vector(1484, 45, 1012))
	:setTeamOnlyRegion(Vector(1504, 24, 1008), Vector(1460, 50, 1040))
	:addVehicle(enum.vehicle.beamer, Vector(1497, 26, 1030), orientations.w)
	:addVehicle(enum.vehicle.van, Vector(1497, 26, 1025), orientations.w)
	:addVehicle(enum.vehicle.town_car, Vector(1497, 26, 1020), orientations.w)
	:addVehicle(enum.vehicle.hatchback, Vector(1497, 26, 1015), orientations.w)

return map
